importScripts('./js/idb.js'),importScripts('./js/dbhelper.js');const staticCacheName='restaurant-static-v5',imgsCacheName='restaurant-imgs',allCaches=[staticCacheName,imgsCacheName];self.addEventListener('install',a=>{const b=['/','js/main.js','js/restaurant_info.js','js/dbhelper.js','js/idb.js','js/Google.min.js','css/styles.css','css/home.css','css/responsive-home.css','css/restaurant.css','css/responsive-restaurant.css','https://fonts.googleapis.com/css?family=Roboto:300,400s'];a.waitUntil(caches.open(staticCacheName).then(c=>c.addAll(b)))}),self.addEventListener('fetch',a=>{const b=new URL(a.request.url);let c='';if(b.origin===location.origin){if(b.pathname.startsWith('/img/'))return c=a.request.url.replace(/_*[a-z]*\.jpg/,''),void a.respondWith(serveFromCache(a.request,imgsCacheName,c));if(b.pathname.startsWith('/restaurant'))return c=b.pathname.substr(1),void a.respondWith(serveFromCache(a.request,staticCacheName,c))}a.respondWith(caches.match(a.request).then(d=>{return d?d:fetch(a.request)}).then(d=>{return 404===d.status?new Response('Not found'):d}).catch(d=>{return console.log('SW ERROR: ',d),new Response('Connection error')}))}),self.addEventListener('activate',a=>{a.waitUntil(caches.keys().then(b=>{Promise.all(b.filter(c=>c.startsWith('restaurant-')&&!allCaches.includes(c)).map(c=>caches.delete(c)))}))}),self.addEventListener('message',a=>{'skipWaiting'===a.data.action&&(console.log('SWITCHING TO NEW SW'),self.skipWaiting())}),self.addEventListener('sync',a=>{'sync-reviews-on-online'===a.tag&&a.waitUntil(DBHelper.processOutbox().then(b=>console.log('SW SYNC processOutbox on online completed, result: ',b)).catch(b=>console.log('SW SYNC online error: ',b))),'sync-reviews-on-reload'===a.tag&&a.waitUntil(DBHelper.processOutbox().then(b=>console.log('SW SYNC processOutbox on-reload completed, result: ',b)).catch(b=>console.log('SW SYNC reload error: ',b)))});function serveFromCache(a,b,c){return caches.open(b).then(d=>d.match(c).then(e=>{return e?e:fetch(a).then(f=>{return d.put(c,f.clone()),f})}))}
